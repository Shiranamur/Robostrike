@page "/login"
@using BlazorApp1.Services
@using BlazorApp1.UsersServices
@inject UsersService UsersService
@inject SessionService SessionService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="card shadow p-4" style="max-width: 400px; width: 100%;">
        <h3 class="text-center mb-4">Login</h3>

        <div class="form-floating mb-3">
            <input @bind="username" class="form-control" id="username" placeholder="Username" />
            <label for="username">Username</label>
        </div>

        <div class="form-floating mb-3">
            <input type="password" @bind="password" class="form-control" id="password" placeholder="Password" />
            <label for="password">Password</label>
        </div>

        <button class="btn btn-primary w-100" @onclick="HandleLogin">Sing in</button>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </div>
</div>




@code {
    private string username;
    private string password;
    private string errorMessage;

    private async Task HandleLogin()
    {
        // Basic debug: 
        Console.WriteLine("HandleLogin() called");

        // Validate user
        bool valid = await UsersService.ValidateUserLogin(username, password);
        if (!valid)
        {
            errorMessage = "Invalid username or password.";
            return;
        }

        // Retrieve the user
        var user = await UsersService.GetUserByUsername(username);
        if (user == null)
        {
            errorMessage = "User not found.";
            return;
        }
        
        var token = await SessionService.CreateSessionTokenAsync(user.Id);
        await JS.InvokeVoidAsync("localStore.set", "sessionToken", token);
        
        Navigation.NavigateTo("/hub");
    }
}